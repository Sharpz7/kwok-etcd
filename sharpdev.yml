version: 1

# envfile: .env

scripts:
  setup: |
    go install sigs.k8s.io/kwok/cmd/kwok@latest
    go install sigs.k8s.io/kwok/cmd/kwokctl@latest

  cluster: |
    kwokctl create cluster --name=kwok$_ARG1 --disable-qps-limits

  100kb_pod: |
    bash scripts/pod.sh

  clusters: |
    sharpdev cluster
    sharpdev cluster 2
    sharpdev cluster 3

  delete: |
    kwokctl delete cluster --name=kwok$_ARG1

  deleteall: |
    sharpdev delete
    sharpdev delete 2
    sharpdev delete 3

  monitor: |
    # Initialize a variable to store the previous output line count
    while true; do
      kwokctl etcdctl --write-out=table endpoint status
      sleep 5
      clear
    done

  context: |
    kubectl config use-context kwok-kwok$_ARG1

  create: |
    # Initialize a temporary file
    TMP_FILE=$(mktemp)

    # Use a for loop to repeat for NAME2 to NAME8
    i=1
    while [ $i -le 1000 ]; do
      # Generating the first name
      NAME=$(cat /dev/urandom | tr -dc 'a-z0-9' | fold -w 10 | head -n 1)
      export NAME="n${NAME}1"

      # Substitute and append to temporary file
      envsubst < ./configs/$_ARG1.yaml >> "$TMP_FILE"

      echo "" >> "$TMP_FILE"
      echo "---" >> "$TMP_FILE"

      i=$((i + 1))
    done

    # Apply all configurations at once
    kubectl apply -f "$TMP_FILE"

    # Clean up temporary file
    rm "$TMP_FILE"

  get: |
    kubectl get $_ARG1 $_ARG2

  chaos_nodes: |
    i=1
    while [ $i -le 10 ]; do
      sharpdev create node
      i=$((i + 1))
    done

  chaos_pods: |
    i=1
    while [ $i -le 20 ]; do
      sharpdev create pod
      i=$((i + 1))
    done

  chaos: |
    sharpdev chaos nodes
    sharpdev chaos pods

  fill: |
    while [ 1 ]; do dd if=/dev/urandom bs=1024 count=1024  | ETCDCTL_API=3 kwokctl etcdctl put key  || break; done

  alarms: |
    ETCDCTL_API=3 kwokctl etcdctl alarm list
